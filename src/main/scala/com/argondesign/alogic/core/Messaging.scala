////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017-2021 Argon Design Ltd. All rights reserved.
// This file is covered by the BSD (with attribution) license.
// See the LICENSE file for the precise wording of the license.
////////////////////////////////////////////////////////////////////////////////

package com.argondesign.alogic.core

import com.argondesign.alogic.core.Messages._

trait Messaging { self: CompilerContext =>

  //////////////////////////////////////////////////////////////////////////////
  // Get messages/status
  //////////////////////////////////////////////////////////////////////////////

  final def messages: Seq[Message] = messageBuffer.messages

  final def hasError: Boolean = messageBuffer.hasError

  //////////////////////////////////////////////////////////////////////////////
  // Versions without source location
  //////////////////////////////////////////////////////////////////////////////

  final def warning(msg: String*): Unit = messageBuffer.warning(Loc.unknown, msg: _*)

  final def error(msg: String*): Unit = messageBuffer.error(Loc.unknown, msg: _*)

  //////////////////////////////////////////////////////////////////////////////
  // Versions with a source location
  //////////////////////////////////////////////////////////////////////////////

  final def warning[T: Locatable](item: T, msg: String*): Unit =
    messageBuffer.warning(item, msg: _*)

  final def error[T: Locatable](item: T, msg: String*): Unit =
    messageBuffer.error(item, msg: _*)

  //////////////////////////////////////////////////////////////////////////////
  // Add pre-computed messages
  //////////////////////////////////////////////////////////////////////////////

  final def addMessage(message: Message): Unit = messageBuffer.add(message)
}
