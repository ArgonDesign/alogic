network pipeline_00 {
  in  u2 i;
  out u2 o;

  pipeline bool p;
  pipeline bool q;

  new fsm a {
    out pipeline;
    void main() {
      {p, q} = i.read();
      out.write();
      fence;
    }
  }

  a -> b;

  new fsm b {
    in pipeline;
    void main() {
      in.read();
      o.write({q, p});
      fence;
    }
  }
}
// @fec/golden {{{
// module pipeline_00(
//   input  wire        clk,
//   input  wire        rst,
//   input  wire  [1:0] i,
//   output reg   [1:0] o
// );
//
//   reg pa_q;
//   reg qa_q;
//
//   always @(posedge clk) begin
//     if (rst) begin
//       pa_q <= 1'b0;
//       qa_q <= 1'b0;
//       o <= 2'b0;
//     end else begin
//       {pa_q, qa_q} <= i;
//       o <= {qa_q, pa_q};
//     end
//   end
//
// endmodule
// }}}
