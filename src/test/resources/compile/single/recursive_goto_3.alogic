fsm recursive_goto_3 {
  in       u2 i;
  out wire u2 o;

  void main() {
    o = i;
    goto a;
  }

  void a() {
    o = i + 1;
    if (i == 0) {
      goto main;
    } else if (i == 1) {
      goto b;
    } else {
      goto a;
    }
  }

  void b() {
    o = i + 2;
    if (i == 0) {
      goto main;
    } else {
      goto b;
    }
  }
}
// @fec/golden {{{
//  module recursive_goto_3(
//    input   wire        clk,
//    input   wire        rst,
//    input   wire  [1:0] i,
//    output  reg   [1:0] o
//  );
//
//    reg [1:0] state_q;
//    reg [1:0] state_d;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        state_q <= 2'd0;
//      end else begin
//        state_q <= state_d;
//      end
//    end
//
//    always @* begin
//      case (state_q)
//        default: begin
//          o = i;
//          state_d = 2'd1;
//        end
//        2'd1: begin
//          o = i + 2'd1;
//          state_d = i == 2'd0 ? 2'd0 :
//                    i == 2'd1 ? 2'd2 :
//                                2'd1;
//        end
//        2'd2: begin
//          o = i + 2'd2;
//          state_d = i == 2'd0 ? 2'd0 : 2'd2;
//        end
//      endcase
//    end
//
//  endmodule
// }}}
