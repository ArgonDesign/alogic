fsm control_for_04 {
  in  bool i;
  out bool o = 0;
  in  bool a;
  in  bool b;
  out u3   x = 0;

  void main() {
    for (x = 0 ; i ; x++) {
      o = a;
    }
    for (x = 7 ; i ; x--) {
      o = b;
    }
  }
}
// @fec/smtc {{{
//  always 1
//  assert (= [golden.state_q] [alogic.state_q])
// }}}
// @fec/golden {{{
// module control_for_04(
//    input  wire  clk,
//    input  wire  rst,
//    input  wire  i,
//    output reg   o,
//    input  wire  a,
//    input  wire  b,
//    output reg  [2:0] x
// );
//
//    localparam [1:0] A_TEST = 2'd0;
//    localparam [1:0] A_HEAD = 2'd1;
//    localparam [1:0] B_TEST = 2'd2;
//    localparam [1:0] B_HEAD = 2'd3;
//
//    reg [1:0] state_q;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        o <= 1'd0;
//        x <= 3'd0;
//        state_q <= A_TEST;
//      end else begin
//        case (state_q)
//          A_TEST: begin
//            x <= 3'd0;
//            if (i) begin
//              state_q <= A_HEAD;
//            end else begin
//              state_q <= B_TEST;
//            end
//          end
//          A_HEAD: begin
//            o <= a;
//            x <= x + 3'd1;
//            if (!i) begin
//              state_q <= B_TEST;
//            end
//          end
//          B_TEST: begin
//            x <= 3'd7;
//            if (i) begin
//              state_q <= B_HEAD;
//            end else begin
//              state_q <= A_TEST;
//            end
//          end
//          B_HEAD: begin
//            o <= b;
//            x <= x - 3'd1;
//            if (!i) begin
//              state_q <= A_TEST;
//            end
//          end
//        endcase
//      end
//    end
//
// endmodule
// }}}
// @stats/$TEST_FILE|control_for_04|states: 4
