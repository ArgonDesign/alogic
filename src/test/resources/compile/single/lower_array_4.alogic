fsm lower_array_4 {
  in  sync u2    waddr;
  in       bool  wdata;
  in  sync u2    raddr;
  out wire bool  rdata;

  bool store[4];

  void main() {
    rdata = store[raddr.read()];
    store.write(waddr.read(), wdata);
    fence;
  }
}
// @fec/smtc {{{
//  initial
//  assume (= [golden.store_q] [alogic.store_q])
//  always
//  assert (= [golden.store_q] [alogic.store_q])
// }}}
// @fec/golden {{{
//  module lower_array_4(
//    input             clk,
//    input  wire       waddr__valid,
//    input  wire [1:0] waddr,
//    input  wire       wdata,
//    input  wire       raddr__valid,
//    input  wire [1:0] raddr,
//    output wire       rdata
//  );
//
//    reg store_q[3:0];
//
//    always @(posedge clk) begin
//      if (waddr__valid && raddr__valid) begin
//        store_q[waddr] <= wdata;
//      end
//    end
//
//    assign rdata = store_q[raddr];
//
//  endmodule
// }}}
