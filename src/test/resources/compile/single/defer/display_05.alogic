fsm display_05 {
  in u32 i;

  u3 x = 1;

  void main() {
    if (x != 0) {
      @display("At tick %1d:\nx is %2d ...", i, x);
      x += 1;
      @display("... and x + 1 is %d", x);
      @display("... and x + 2 is %d", x + 1);
    }
    fence;
  }
}

// @sim/test {{{
//  reg [31:0] tick;
//
//  always @(posedge clk) begin
//    if (rst) begin
//      tick <= 32'd0;
//    end else begin
//      tick <= tick + 32'd1;
//    end
//  end
//
//  wire [31:0] i = tick;
// }}}
//
// @sim/expect {{{
//  At tick 0:
//  x is  1 \.\.\.
//  \.\.\. and x \+ 1 is 2
//  \.\.\. and x \+ 2 is 3
//  At tick 1:
//  x is  2 \.\.\.
//  \.\.\. and x \+ 1 is 3
//  \.\.\. and x \+ 2 is 4
//  At tick 2:
//  x is  3 \.\.\.
//  \.\.\. and x \+ 1 is 4
//  \.\.\. and x \+ 2 is 5
//  At tick 3:
//  x is  4 \.\.\.
//  \.\.\. and x \+ 1 is 5
//  \.\.\. and x \+ 2 is 6
//  At tick 4:
//  x is  5 \.\.\.
//  \.\.\. and x \+ 1 is 6
//  \.\.\. and x \+ 2 is 7
//  At tick 5:
//  x is  6 \.\.\.
//  \.\.\. and x \+ 1 is 7
//  \.\.\. and x \+ 2 is 0
//  At tick 6:
//  x is  7 \.\.\.
//  \.\.\. and x \+ 1 is 0
//  \.\.\. and x \+ 2 is 1
//  TIMEOUT at 100ns
// }}}
