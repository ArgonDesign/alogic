// @args: --no-assertions
fsm ctrl_argret_10 {
  in  u3 i;
  out u3 o;

  void main() {
    o = fib(4) + i;
    fence;
  }

  (* reclimit = 4 *)
  u3 fib(u8 n) {
    if (n == 0) {
      return 0;
    } else if (n == 1) {
      return 1;
    } else {
      return fib(n-2) + fib(n-1);
    }
  }
}
// @fec/mode: bmc
// @fec/depth: 100
// @fec/golden {{{
//  module ctrl_argret_10(
//    input wire clk,
//    input wire rst,
//    input wire [2:0] i,
//    output reg [2:0] o
//  );
//
//    reg [4:0] state_q;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        o <= 3'd0;
//        state_q <= 5'd0;
//      end else begin
//        state_q <= state_q + 5'd1;
//        case (state_q)
//          5'd18: begin
//            o <= i + 3'd3;
//            state_q <= 5'd0;
//          end
//          default: begin
//          end
//        endcase
//      end
//    end
//
//  endmodule
// }}}
