network gen_ent_8 {
  in  u1  i_0;
  in  u2  i_1;
  in  u3  i_2;
  in  u4  i_3;

  out u1  o_0;
  out u2  o_1;
  out u3  o_2;
  out u4  o_3;

  gen for (uint n <= 3) {
    fsm connect {
      param uint TOGGLES;

      const uint W = n + 1;

      in       uint(W) p_i;
      out wire uint(W) p_o;

      void main() {
        uint(W) t = p_i;
        gen for (uint m < TOGGLES) {
          t = ~t;
        }
        p_o = t;
        fence;
      }
    }

    inst = new connect(TOGGLES = 3*n);

    gen if (n == 0) {
      i_0 -> inst.p_i; inst.p_o -> o_0;
    } else if (n == 1) {
      i_1 -> inst.p_i; inst.p_o -> o_1;
    } else if (n == 2) {
      i_2 -> inst.p_i; inst.p_o -> o_2;
    } else {
      i_3 -> inst.p_i; inst.p_o -> o_3;
    }
  }
}
// @fec/golden {{{
//  module gen_ent_8(
//    input  wire       i_0,
//    input  wire [1:0] i_1,
//    input  wire [2:0] i_2,
//    input  wire [3:0] i_3,
//    output wire       o_0,
//    output wire [1:0] o_1,
//    output wire [2:0] o_2,
//    output wire [3:0] o_3
//  );
//
//    assign o_0 = i_0;
//    assign o_1 = ~i_1;
//    assign o_2 = i_2;
//    assign o_3 = ~i_3;
//
//  endmodule
// }}}
