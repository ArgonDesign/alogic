network gen_if_stmt_0 {
  in bool p_i;

  out bool p_on;
  out bool p_op;

  fsm inner {
    param bool P;

    out bool p_o;

    void main() {
      gen if (P) {
        p_o.write(p_i);
      } else {
        p_o.write(~p_i);
      }
      fence;
    }
  }

  neg = new inner(P=false);
  pos = new inner(P=true);

  neg.p_o -> p_on;
  pos.p_o -> p_op;
}
// @fec-golden {{{
//  module gen_if_stmt_0(
//    input wire rst,
//    input wire clk,
//    input wire p_i,
//    output reg p_on,
//    output reg p_op
//  );
//
//  always @(posedge clk) begin
//    if (rst) begin
//      p_on <= 1'd0;
//      p_op <= 1'd0;
//    end else begin
//      p_on <= ~p_i;
//      p_op <= p_i;
//    end
//  end
//
//  endmodule
// }}}
