fsm control_call_00 {
  out u4 o = 0;

  void main() {
    f();
    f();
  }

  void f() {
    o += 2;
    return;
  }
}
// Note: The above compiles into a stack machine, but this is equivalent
// @fec/golden {{{
//  module control_call_00(
//    input wire       clk,
//    input wire       rst,
//    output reg [3:0] o
//  );
//    reg [1:0] state_q;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        state_q <= 2'b0;
//        o <= 4'd0;
//      end else begin
//        case (state_q)
//          2'd0: begin
//            state_q <= 2'd1;
//          end
//          2'd1: begin // First in 'f'
//            state_q <= 2'd2;
//            o <= o + 4'd2;
//          end
//          default: begin // Second in 'f'
//            state_q <= 2'd0;
//            o <= o + 4'd2;
//          end
//        endcase
//      end
//    end
//
//  endmodule
// }}}
// @stats/$TEST_FILE|control_call_00|stack-depth: 1
// @stats/$TEST_FILE|control_call_00|states: 2
