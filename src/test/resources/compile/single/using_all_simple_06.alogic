gen if (true) : block {
  struct S {
    static bool not(bool i) { return ~i; }
    static bool xor(bool i, bool j) { return i ^ j; }
  }
}

using block.S.*;

fsm using_all_simple_06 {
  in       bool ia;
  in       bool ib;
  out wire bool o;

  void main() {
    o = xor(not(ia), ib);
    fence;
  }
}

// @fec/golden {{{
//  module using_all_simple_06(
//    input  wire ia,
//    input  wire ib,
//    output wire o
//  );
//    assign o = ~ia ^ ib;
//  endmodule
// }}}
