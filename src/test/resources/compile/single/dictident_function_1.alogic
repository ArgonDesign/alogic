fsm dictident_function_1 {
  in  bool i;
  out bool o = false;

  gen for (uint N < 1) {
    void func#[0]() {
      o = i;
      return;
    }
    void func#[1]() {
      o = ~i;
      return;
    }
  }

  void main() {
    o = 0;
    func#[0]();
    func#[1]();
  }
}
// @fec/golden {{{
//  module dictident_function_1(
//    input wire clk,
//    input wire rst,
//    input wire i,
//    output reg o
//  );
//    reg [1:0] state_q;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        state_q <= 2'b0;
//        o <= 1'd0;
//      end else begin
//        case (state_q)
//          2'd0: begin
//            state_q <= 2'd1;
//            o <= 1'd0;
//          end
//          2'd1: begin
//            state_q <= 2'd2;
//            o <= i;
//          end
//          default: begin
//            state_q <= 2'd0;
//            o <= ~i;
//          end
//        endcase
//      end
//    end
//
//  endmodule
// }}}
