fsm control_while_01 {
  in  bool i;
  out bool o = 0;
  in  bool a;
  in  bool b;

  void main() {
    while (i) {
      o = a;
      while (i) {
        o = ~a;
      }
    }
    while (i) {
      o = b;
      while (i) {
        o = ~b;
      }
    }
  }
}
// @fec/smtc {{{
//  always 1
//  assert (= [golden.state_q] [alogic.state_q])
// }}}
// @fec/golden {{{
// module control_while_01(
//    input  wire  clk,
//    input  wire  rst,
//    input  wire  i,
//    output reg   o,
//    input  wire  a,
//    input  wire  b
// );
//
//    localparam [2:0] A_OUTER_TEST = 3'd0;
//    localparam [2:0] A_OUTER_HEAD = 3'd1;
//    localparam [2:0] A_INNER_HEAD = 3'd2;
//    localparam [2:0] B_OUTER_TEST = 3'd3;
//    localparam [2:0] B_OUTER_HEAD = 3'd4;
//    localparam [2:0] B_INNER_HEAD = 3'd5;
//
//    reg [2:0] state_q;
//
//    always @(posedge clk) begin
//      if (rst) begin
//        o <= 1'd0;
//        state_q <= A_OUTER_TEST;
//      end else begin
//        case (state_q)
//          A_OUTER_TEST: begin
//            if (i) begin
//              state_q <= A_OUTER_HEAD;
//            end else begin
//              state_q <= B_OUTER_TEST;
//            end
//          end
//          A_OUTER_HEAD: begin
//            o <= a;
//            if (i) begin
//              state_q <= A_INNER_HEAD;
//            end else begin
//              state_q <= A_OUTER_TEST;
//            end
//          end
//          A_INNER_HEAD: begin
//            o <= ~a;
//            if (!i) begin
//              state_q <= A_OUTER_TEST;
//            end
//          end
//          B_OUTER_TEST: begin
//            if (i) begin
//              state_q <= B_OUTER_HEAD;
//            end else begin
//              state_q <= A_OUTER_TEST;
//            end
//          end
//          B_OUTER_HEAD: begin
//            o <= b;
//            if (i) begin
//              state_q <= B_INNER_HEAD;
//            end else begin
//              state_q <= B_OUTER_TEST;
//            end
//          end
//          /* B_INNER_HEAD */ default: begin
//            o <= ~b;
//            if (!i) begin
//              state_q <= B_OUTER_TEST;
//            end
//          end
//        endcase
//      end
//    end
//
// endmodule
// }}}
// @stats/control_while_01/states: 6
